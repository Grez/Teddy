Komunikace v reálném čase

HTTP je bezstavový protokol. Funguje tedy na principu požadavek-odpověď http://tools.ietf.org/html/rfc7230. Bez nového požadavku na server tedy není možné běžně uživateli poslat notifikaci o nové události. Pro překonání tohoto omezení a zpříjemnění používání aplikace lze použít například AJAX požadavky, které v pravidelných intervalech posílají nové dotazy na server a podle toho upraví HTML na klientovi. Pro tento způsob komunikace se vžil název heartbeat https://www.zdrojak.cz/clanky/kometa-prinasi-web-v-realnem-case/.

<Obrázek pro heartbeat>

S využitím AJAXu se o nové události klient pravděpodobně nedozví okamžitě, ale až několik sekund nebo spíše desítek sekund po jejím vzniku. Čím rychleji budeme chtít dostat informaci o nové události, tím častěji budeme muset posílat požadavky na server. Jelikož se dá očekávat, že většina požadavků navíc nevyvolá žádné změny na klientovi (většina aplikací nemá pro každého klienta změny každou sekundu), bude tak spousta požadavků zbytečných. To vede ke zbytečnému zatěžování serveru a sítě (hlavičky požadavku, cookies, zpracování požadavku, ...) Tento problém by šel vyřešit, kdybychom umožnili serveru posílat události ke klientovi. Jelikož nemůžeme jednoduše poslat HTTP požadavek ze serveru ke klientovi (musel by mít veřejnou IP adresu, povolit na firewallu příchozí spojení...), tak to nemá tak prosté řešení. V dnešní době už ale existuje několik technik, jak toho dosáhnout.

Long-polling (dlouhé dotazování)

<Obrázek pro longpolling>

Long-polling spočívá v tom, že server nechává spojení s klientem otevřené, až do doby, kdy má odpověd, nebo nastane nějaký timeout. Klient na to zareaguje tím, že jakmile obdrží odpověd, nebo nastane timeout, pošle nový požadavek. Díky této technice tak server odesílá notifikace o nových událostech hned, kdy je má server k dispozici. Pro implementaci long-pollingu jde například použít neviditelný <iframe> element.

Server-sent-events (serverem odesílané události)

Long-polling je do jisté míry ohýbání HTTP. Server-sent-events se snaží, aby od toho mohla být aplikace odstíněna. Implementuje tedy v zásadě to stejné přímo na úrovni prohlížeče. Aplikace tedy jednoduše zavolá požadavek na určitou URL adresu a o zbytek se již postará prohlížeč. Máme tak jednoduše vytvořené jednosměrné spojení ze serveru ke klientovi.

Web Sockets

<Obrázek pro Web Sockets>

Pokud chceme obousměrné real-time spojení je potřeba se obrátit už na jiný protokol. Web Sockets umožnuje připojení více klientů na jeden server a okamžitou komunikaci mezi nimi. Uživatel tak jednoduše může na server poslat zprávu, kterou server může zpracovat a případně předat dalším klientům.

Shrnutí:
                                LP                   Server Sent Events                Web Sockets
Podpora v prohlížečích:   všechny moderní    |       všechny moderní kromě IE http://caniuse.com/#feat=eventsource    |    všechny moderní http://caniuse.com/#feat=websockets
Náročnost server: nechává otevřené requesty pro každé spojení | stejné jako LP |
Implementace: jednoduchá | ještě jednodušší |
Rychlost:

Web RTC
